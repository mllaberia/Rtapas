devtools::build()
use_r("one2one_f")
library(devtools)
library(roxygen2)
library(tidyverse)
use_r("one2one_f")
load_all()
devtools::document()
devtools::install()
use_r("one2one_f")
use_r("trimHS_maxC")
use_r("geo_D")
devtools::build()
load_all()
devtools::document()
devtools::build()
load_all()
devtools::document()
devtools::install()
devtools::build()
load_all()
devtools::document()
devtools::build()
use_r("linkf_CI")
library(parallel)
load_all()
devtools::document()
devtools::install()
remove.packages("RandomTaPas", lib="~/R/win-library/4.1")
uninstall(package = "RandomTaPas")
uninstall("RandomTaPas")
install.packages("~/R/library/RandomTaPas_0.1.tar.gz", repos = NULL, type = "source")
library(devtools)
library(roxygen2)
library(tidyverse)
#libraries for the
load_all()
devtools::document()
devtools::install()
load_all()
devtools::document()
devtools::install()
load_all()
devtools::document()
devtools::install()
gd_apply <- function(ths, th, ts, HS) {
GD.CI <- geo_D(ths, treeH=th, treeS=ts, strat = strat , cl = cl)
LFGD01.CI <- link_freq(ths, GD.CI, HS, percentile = percentile,
res.fq = res.fq, below.p = below.p)
return(LFGD01.CI[, 5])
}
load_all()
devtools::document()
devtools::install()
load_all()
devtools::document()
load_all()
devtools::install()
load_all()
devtools::document()
devtools::install()
load_all()
devtools::document()
devtools::install()
load_all()
devtools::document()
devtools::install()
load_all()
devtools::document()
devtools::install()
load_all()
devtools::document()
devtools::install()
data(birds_mites)
N = 1e+2
n = 50
TBM <- trimHS_maxC(N, bm_matrix, n, strat = "parallel", cl = 4)
gd_bm <- geo_D(TBM, treeH = birds, treeS = mites, strat = "parallel", cl = 8)
# link frequencies with the geodesic distance
LFGD <- link_freq(TBM, gd_bm, bm_matrix, percentile = 0.01, sep = "-",
below.p = TRUE, res.fq = TRUE)
LFGD
LFGD <- link_freq(TBM, gd_bm, bm_matrix, percentile = 0.01, sep = "-",
below.p = TRUE, res.fq = FALSE)
head(LFGD)
load_all()
devtools::document()
devtools::install()
load_all()
devtools::document()
devtools::install()
load("~/R/library/RandomTaPas/data/plant_fungi.rda")
devtools::document()
devtools::check()
use_r("assoc_mat")
data(plant_fungi)
hp_matrix <- assoc_mat(pf)
use_r("trimHS_maxI")
use_r("trimHS_maxI")
load("~/R/library/RandomTaPas/data/birds_mites.rda")
load_all()
devtools::document()
devtools::check()
use_r("trimHS_maxC")
data(birds_mites)
N = 1e+2
n = 50
TBM <- trimHS_maxC(N, bm_matrix, n, strat = "parallel", cl = 4)
gd_bm <- geo_D(TBM, treeH = birds, treeS = mites, strat = "parallel", cl = 8)
# link frequencies with the geodesic distance
LFGD <- link_freq(TBM, gd_bm, bm_matrix, percentile = 0.01, sep = "-",
below.p = TRUE, res.fq = FALSE)
use_r("tangle_gram")
data(birds_mites)
N = 1e+2
n = 50
TBM <- trimHS_maxC(N, bm_matrix, n, strat = "parallel", cl = 4)
gd_bm <- geo_D(TBM, treeH = birds, treeS = mites, strat = "parallel", cl = 8)
LFGD <- link_freq(TBM, gd_bm, bm_matrix, percentile = 0.01, sep = "-",
below.p = TRUE, res.fq = TRUE)
col.scale = c("darkred","gray90", "darkblue")
tangle_gram(birds, mites, bm_matrix, colscale= "sequential", colgrad=col.scale,
nbreaks = 50, LFGD, res.fq = TRUE, link.lty = 1, fsize = 0.25,
pts = FALSE, link.type = "straight", node.tag = FALSE, cexpt=1)
data(plant_fungi)
N = 1e+2
n = 15
TPF <- trimHS_maxC(N, pf_matrix, n)
pac_pf <- paco_ss(TPF, treeH = plant, treeS = fungi, symmetric = TRUE,
proc.warns = FALSE, ei.correct = "sqrt.D",
strat = "parallel", cl = 8)
LFPACO <- link_freq(TPF, pac_pf, pf_matrix, percentile = 0.01, sep = "-",
below.p = TRUE, res.fq = TRUE)
col.scale = c("darkred","gray90", "darkblue")
tangle_gram(plant, fungi, bm_matrix, colscale= "sequential", colgrad=col.scale,
nbreaks = 50, LFPACO, res.fq = TRUE, link.lty = 1, fsize = 0.25,
pts = FALSE, link.type = "straight", node.tag = FALSE, cexpt=1)
tangle_gram(plant, fungi, pf_matrix, colscale= "sequential", colgrad=col.scale,
nbreaks = 50, LFPACO, res.fq = TRUE, link.lty = 1, fsize = 0.25,
pts = FALSE, link.type = "straight", node.tag = FALSE, cexpt=1)
load_all()
devtools::document()
#the ned check and install
devtools::check()
use_r("tangle_gram")
use_r("trimHS_maxI")
?tangle_gram
?link_freq
?trimHS_maxC
?geo_D
devtools::install()
detach("package:RandomTaPas", unload = TRUE)
library(RandomTaPas)
detach("package:RandomTaPas", unload = TRUE)
load_all()
devtools::document()
devtools::install()
data(birds_mites)
N = 1e+2
n = 50
TBM <- trimHS_maxI(N, bm_matrix, n, strat = "sequential", cl = 4)
load_all()
devtools::document()
data(birds_mites)
N = 1e+2
n = 50
TBM <- trimHS_maxI(N, bm_matrix, n, strat = "sequential", cl = 4)
View(TBM)
N = 1e+2
n = 50
data(birds_mites)
TBM <- trimHS_maxI(N, bm_matrix, n)
?replicate
trimI.HS <- lapply(1:N, trim.intI(HS=HS, n=n))
trim.intI <- function (HS, n) {
HS.LUT <- which(HS == 1, arr.ind = TRUE)
HS.LUT <- cbind(HS.LUT,1:nrow(HS.LUT))
LH <- LS <- 1
while(LH <= 1 | LS <= 1) {  # skip configurations with only
HS.trim <- HS.LUT[sample(nrow(HS.LUT), n), ] # one H or one S
LH <- length(unique(HS.trim[, 1]))
LS <- length(unique(HS.trim[, 2]))
}
hs <- HS
hs[ , ] <- 0
for (j in 1:nrow(HS.trim)) {
hs[HS.trim[j,1], HS.trim[j,2]] <- 1
}
hs <- hs[-which(rowSums(hs) == 0), -which(colSums(hs) == 0)]
return(hs)
}
trimI.HS <- lapply(1:N, trim.intI(HS=HS, n=n))
load_all()
devtools::document()
TBM <- trimHS_maxI(N, bm_matrix, n)
load_all()
devtools::document()
TBM <- trimHS_maxI(N, bm_matrix, n)
use_r("trimHS_maxC")
HS <- bm_matrix
trimI.HS <- lapply(1:N, trim.intI, HS = HS , n = n)
trimI.HS <- lapply(1:N, trim.intI, HS, 50)
trimI.HS <- lapply(1:N, FUN = trim.intI, HS, n)
trimI.HS <- replicate(N, trim.intI(HS = HS, n = n))
trimI.HS <- replicate(N, trim.intI(HS = HS, n = n), simplify = FALSE)
View(trimI.HS)
trimI.HS[sapply(trimI.HS, is.null)] <- NULL
View(trimI.HS)
TBM <- trimHS_maxI(N, bm_matrix, n)
load_all()
devtools::document()
TBM <- trimHS_maxI(N, bm_matrix, n)
View(TBM)
TPF <- trimHS_maxI(N, pf_matrix, n, check.unique = TRUE)
View(TPF)
load_all()
devtools::document()
devtools::check()
use_r("trimHS_maxI")
use_test("trimHS_maxI")
load_all()
devtools::document()
devtools::check()
data(birds_mites)
N = 1e+2
n = 50
TBM <- trimHS_maxI(N, bm_matrix, n)
data(plant_fungi)
N = 1e+2
n = 15
TPF <- trimHS_maxI(N, pf_matrix, n, check.unique = TRUE)
library(devtools)
library(roxygen2)
library(tidyverse)
use_r("trimHS_maxI")
use_test("trimHS_maxI")
load_all()
devtools::check()
data(birds_mites)
N = 1e+2
n = 50
TBM <- trimHS_maxI(N, bm_matrix, n)
# With plant_fungi dataset
data(plant_fungi)
N = 1e+2
n = 15
TPF <- trimHS_maxI(N, pf_matrix, n, check.unique = TRUE)
View(TPF)
View(TBM)
TBM <- trimHS_maxI(N, bm_matrix, n, check.unique = TRUE)
load_all()
devtools::document()
devtools::install()
#the ned check and install
devtools::check()
use_r("trimHS_maxI")
devtools::document()
devtools::check("trimHS_maxI")
use_r("linkf_CI")
use_r("tangle_gram")
devtools::load_all()
devtools::document()
devtools::document()
use_readme_md()
usethis::use_testthat()
data(package = "RandomTaPas")
devtools::check()
use_r("trimHS_maxI")
devtools::load_all()
devtools::document()
devtools::check()
use_r("trimHS_maxI")
devtools::load_all()
devtools::document()
devtools::check()
use_r("linkf_CI")
use_r("tangle_gram")
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
data(package = "RandomTaPas")
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
tools::checkRdaFiles("~/R/library/RandomTaPas/data")
tools::resaveRdaFiles("~/R/library/RandomTaPas/data", compress = "bzip2")
tools::checkRdaFiles("~/R/library/RandomTaPas/data")
document()
roxygenise()
document()
create()
plant <- read.tree("C:/Users/Mar/Desktop/axm/H1.nwk")
fungi <- read.tree("C:/Users/Mar/Desktop/axm/P1.nwk")
pf <- read.delim("C:/Users/Mar/Desktop/axm/HP.txt", sep = "")
pf_matrix <- read.delim("C:/Users/Mar/Desktop/axm/HP_m.txt", sep = ",", row.names = 1)
birds <- read.nexus("C:/Users/Mar/Desktop/bxm/birds.nex")
mites <- read.nexus("C:/Users/Mar/Desktop/bxm/mites.nex")
bm_matrix <- read.delim("C:/Users/Mar/Desktop/bxm/HS_birds_mites.txt", header= TRUE, row.names = 1)
birds_200r_trees <- read.nexus("C:/Users/Mar/Desktop/bxm/birds_200random_trees.nex")
document()
usethis::use_data(birds, mites, bm_matrix, birds_200r_trees, internal = FALSE)
document()
usethis::use_data(birds, mites, bm_matrix, birds_200r_trees, internal = TRUE)
document()
load_all()
document()
usethis::use_data(birds, mites, bm_matrix, birds_200r_trees)
usethis::use_data(birds, mites, bm_matrix, birds_200r_trees, overwrite = TRUE)
usethis::use_data(birds, mites, bm_matrix, birds_200r_trees, overwrite = TRUE)
tools::checkRdaFiles("~/R/library/RandomTaPas/data")
tools::resaveRdaFiles("~/R/library/RandomTaPas/data", compress = "bzip2")
usethis::use_data(birds, mites, bm_matrix, birds_200r_trees, overwrite = TRUE)
save(birds)
save(birds, file = "birds")
setwd("~/R/library/RandomTaPas")
save(birds, file = "~/R/birds.R")
save(birds, file = "~/R/library/RandomTaPas/R/birds.R")
document()
document(birds)
document("~/R/library/RandomTaPas/data/birds.rda")
load("~/R/library/RandomTaPas/data/birds.rda")
load("~/R/library/RandomTaPas/data/birds.rda")
View(birds)
devtools::load_all()
devtools::document()
birds <- read.nexus("C:/Users/Mar/Desktop/bxm/birds.nex")
save(birds, file = "birds.RData")
devtools::load_all()
devtools::document()
use_description()
devtools::load_all()
devtools::document()
use_readme_md()
usethis::use_testthat()
use_test("trimHS_maxI")
use_test("geo_D")
use_test("paco_ss")
use_test("link_freq")
use_test("one2one_f")
use_test("tangle_gram")
use_test("assoc_mat")
birds <- read.nexus("C:/Users/Mar/Desktop/bxm/birds.nex")
usethis::use_data(birds, mites, bm_matrix, birds_200r_trees)
devtools::document()
devtools::document(roclets = c('rda', 'collate', 'namespace'))
library(devtools)
library(roxygen2)
library(tidyverse)
devtools::load_all()
devtools::document()
birds <- read.nexus("C:/Users/Mar/Desktop/bxm/birds.nex")
usethis::use_data(birds, mites, bm_matrix, birds_200r_trees)
usethis::use_data(birds)
usethis::use_data(birds)
save(birds, file = "~/data/birds.rd")
save(birds, file = "~/R/library/RandomTaPas/data/birds.rd")
devtools::document(roclets = c('rd', 'collate', 'namespace'))
use_r("birds")
roxygenise()
devtools::load_all()
devtools::document()
birds <- read.nexus("C:/Users/Mar/Desktop/bxm/birds.nex")
mites <- read.nexus("C:/Users/Mar/Desktop/bxm/mites.nex")
bm_matrix <- read.delim("C:/Users/Mar/Desktop/bxm/HS_birds_mites.txt", header= TRUE, row.names = 1)
birds_200r_trees <- read.nexus("C:/Users/Mar/Desktop/bxm/birds_200random_trees.nex")
usethis::use_data(birds, mites, bm_matrix, birds_200r_trees)
save(birds, mites, bm_matrix, birds_200r_trees, file = "~/R/library/RandomTaPas/data/birds_mites.rda")
use_r("birds_mites")
roxygenise()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
usethis::use_data(birds_mites, overwrite = TRUE)
roxygenise()
devtools::document()
devtools::load_all()
roxygenise()
tools::resaveRdaFiles("~/R/library/RandomTaPas/data/birds_mites", compress = "bzip2")
tools::resaveRdaFiles("~/R/library/RandomTaPas/data", compress = "bzip2")
devtools::load_all()
roxygenise()
load("~/R/library/RandomTaPas/data/birds_mites.rda")
use_r("birds")
use_r("mites")
use_r("bm_matrix")
use_r("birds_200r_trees")
devtools::load_all()
roxygenise()
devtools::document()
use_r("plant")
use_r("fungi")
use_r("pf")
use_r("pf_matrix")
devtools::load_all()
roxygenise()
devtools::document()
devtools::load_all()
devtools::document()
roxygenise()
plant <- read.tree("C:/Users/Mar/Desktop/axm/H1.nwk")
fungi <- read.tree("C:/Users/Mar/Desktop/axm/P1.nwk")
pf <- read.delim("C:/Users/Mar/Desktop/axm/HP.txt", sep = "")
pf_matrix <- read.delim("C:/Users/Mar/Desktop/axm/HP_m.txt", sep = ",", row.names = 1)
save(plant, fungi, pf, pf_matrix, file = "~/R/library/RandomTaPas/data/plant_fungi.rda")
devtools::load_all()
devtools::document()
#the ned check and install
devtools::check()
use_r("birds")
use_r("mites")
devtools::load_all()
devtools::document()
devtools::check()
use_r("birds")
use_r("birds")
use_r("mites")
use_r("bm_matrix")
use_r("birds_200r_trees")
library(devtools)
library(roxygen2)
library(tidyverse)
use_r("birds")
use_r("mites")
use_r("bm_matrix")
use_r("birds_200r_trees")
data("birds_mites")
View(birds)
?birds_mites
??birds_mites
View(birds_200r_trees)
View(bm_matrix)
View(bm_matrix)
View(birds_200r_trees)
View(bm_matrix)
View(mites)
mites[["tip.label"]]
View(bm_matrix)
use_r("bm_matrix")
View(birds)
class(birds)
use_r("link_freq")
View(birds)
class(birds[1])
class(birds[[1]])
class(birds[[2]])
class(birds[[3]])
class(birds[[4]])
class(birds[[5]])
View(birds)
use_r("bm_matrix")
View(mites)
use_r("birds")
use_r("mites")
use_r("bm_matrix")
use_r("birds_200r_trees")
use_r("plant")
use_r("fungi")
use_r("pf")
use_r("pf_matrix")
devtools::load_all()
devtools::document()
#the ned check and install
devtools::check()
data("plant_fungi"
)
View(plant)
View(plant)
View(pf_matrix)
devtools::load_all()
devtools::document()
devtools::load_all()
roxygenise()
devtools::document()
#the ned check and install
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
use_r("paco_ss")
use_r("geo_D")
use_r("paraF")
use_r("paco_ss")
devtools::load_all()
devtools::document()
devtools::install()
use_r("paraF")
use_r("paco_ss")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::install()
devtools::document()
devtools::install()
library(paco)
use_r("link_freq")
devtools::load_all()
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
library(tidyverse)
use_r("tangle_gram")
