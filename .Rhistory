usethis::use_r("paraf_i")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paraf_i")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paraf_i")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
#then insert roxygen skeleton in .R function file
usethis::use_r("one2one_f")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paco_i")
usethis::use_r("paco_ss")
usethis::use_r("paraf_i")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install(
)
devtools::build()
use_test("paraF")
usethis::use_r("paraF")
library(help = "parallel")
#then insert roxygen skeleton in .R function file
usethis::use_r("one2one_f")
usethis::use_r("trimHS_maxC")
devtools::load_all()
devtools::document()
devtools::install()
use_test("trimHS_maxI")
usethis::use_r("trimHS_maxI")
usethis::use_r("geo_D")
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::document()
devtools::install()
usethis::use_r("paco_ss")
usethis::use_r("paraF")
devtools::load_all()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("max_cong")
usethis::use_r("trimHS_maxC")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paco_ss")
usethis::use_r("max_cong")
usethis::use_r("max_incong")
usethis::use_r("paraF")
devtools::load_all()
devtools::document()
devtools::install(
)
usethis::use_r("max_cong")
usethis::use_r("max_incong")
usethis::use_r("paco_ss")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paco_ss")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paraF")
registerDoParallel(cores <- parallelly::makeClusterPSOCK(cl))
paco <- foreach(i = 1:length(ths), .combine = c) %dopar%
sapply(ths[[i]], pacoss, treeH, treeS, symmetric = symmetric,
proc.warns = proc.warns, ei.correct = ei.correct)
parallel::stopCluster(cores)
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("geo_D")
usethis::use_r("trimHS_maxC")
usethis::use_r("trimHS_maxC")
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("max_cong")
usethis::use_r("paraF")
usethis::use_r("paraf_i")
usethis::use_r("paco_ss")
usethis::use_r("trimHS_maxC")
usethis::use_r("geo_D")
usethis::use_r("prob_statistic")
usethis::use_r("max_cong")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paraF")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
gc()
usethis::use_r("paco_ss")
usethis::use_r("paraF")
usethis::use_r("paraf_i")
usethis::use_r("paco_i")
usethis::use_r("paraf_i")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
usethis::use_r("max_cong")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("max_incong")
usethis::use_r("max_cong")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paraf_i2")usethis::use_r("max_cong")
usethis::use_r("paraf_i2")
usethis::use_r("paraf_i")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paco_ss")
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::install()
library(paco)
usethis::use_r("paco_ss")
usethis::use_r("paraF")
usethis::use_r("paraf_i")
usethis::use_r("paco_i")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("prob_statistic")
#then insert roxygen skeleton in .R function file
usethis::use_r("one2one_f")
usethis::use_r("geo_D")
usethis::use_r("paco_ss")
usethis::use_r("paraF")
devtools::load_all()
usethis::use_r("paco_ss")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paraF")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paraF")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
paraF
usethis::use_r("geo_D")
usethis::use_r("paco_ss")
usethis::use_r("paraF")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("paraF")
usethis::use_r("paco_ss")
devtools::load_all()
devtools::document()
devtools::install()
remove.packages("Rtapas", lib="~/R/win-library/4.1")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("prob_statistic")
usethis::use_r("max_incong")
usethis::use_r("prob_statistic")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("linkf_CI")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
3
devtools::load_all()
devtools::document()
devtools::install()
linkf_CI
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("one2one_f")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("gini_plot")
usethis::use_r("gini_plot")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("prob_statistic")
usethis::use_r("max_incong")
usethis::use_r("tangle_gram")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
usethis::use_r("prob_statistic")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("linkf_CI")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("linkf_CI")
devtools::load_all()
devtools::document()
devtools::install()
usethis::use_r("prob_statistic")
devtools::load_all()
devtools::document()
devtools::install()
amphipod <- ape::read.nexus("C:/Users/Mar/Desktop/RTP_RPackage/RandomTaPas-master/PfxCP_Data/Pfluviatilis.tre")
trematod <- ape::read.nexus("C:/Users/Mar/Desktop/RTP_RPackage/RandomTaPas-master/PfxCP_Data/Cparvum.tre")
am_matrix <- as.matrix(read.table("C:/Users/Mar/Desktop/RTP_RPackage/RandomTaPas-master/PfxCP_Data/PfxCP_assoc.txt", header = TRUE))
amphipod_1000tr <- ape::read.nexus("C:/Users/Mar/Desktop/RTP_RPackage/RandomTaPas-master/PfxCP_Data/m_Pfluviatilis.tre")
View(am_matrix)
trematod_1000tr <- read.nexus("C:/Users/Mar/Desktop/RTP_RPackage/RandomTaPas-master/PfxCP_Data/m_Cparvum.tre")
trematod_1000tr <- ape::read.nexus("C:/Users/Mar/Desktop/RTP_RPackage/RandomTaPas-master/PfxCP_Data/m_Cparvum.tre")
save(amphipod, trematod, bm_matrix, amphipod_1000tr, trematod_1000tr, file = "~/R/library/RTaPas/data/amph_trem.rda")
save(amphipod, trematod, am_matrix, amphipod_1000tr, trematod_1000tr, file = "~/R/library/RTaPas/data/amph_trem.rda")
library(devtools)
library(roxygen2)
library(tidyverse)
save(amphipod, trematod, am_matrix, amphipod_1000tr, trematod_1000tr, file = "~/R/library/RTaPas/data/amph_trem.rda")
library(tools)
save(amphipod, trematod, am_matrix, amphipod_1000tr, trematod_1000tr, file = "~/R/library/RTaPas/data/amph_trem.rda")
file.create("R/data.R")
file.create("data")
save(amphipod, trematod, am_matrix, amphipod_1000tr, trematod_1000tr, file = "~/R/library/RTaPas/data/amph_trem.rda")
load("~/R/library/Rtapas/data/amph_trem.rda")
tools::checkRdaFiles("~/R/library/RTaPas/data")
tools::resaveRdaFiles("~/R/library/RTaPas/data", compress = "bzip2")
tools::checkRdaFiles("~/R/library/RTaPas/data")
usethis::use_r("amph_trem")
?amph_trem
??amph_trem
tools::add_datalist("~/R/library/RTaPas/data")
devtools::load_all()
devtools::document()
usethis::use_r("amph_trem")
usethis::use_r("amph_trem")
devtools::load_all()
devtools::document()
?amph_trem
tools::add_datalist("~/R/library/RTaPas/data")
np_matrix <- as.matrix(read.table("C:/Users/Mar/Desktop/NxP_3/NP.txt", header = TRUE))
View(np_matrix)
save(NUCtr, CPtr, np_matrix, NUC_1000tr, CP_1000tr, file = "~/R/library/RTaPas/data/nuc_cp.rda")
NUC_1000tr <- ape::read.tree("C:/Users/Mar/Desktop/NxP_3/FcC_212gNUC.trees")
CP_1000tr <- ape::read.tree("C:/Users/Mar/Desktop/NxP_3/FcC_121sppCP.trees")
NUCtr <- ape::read.nexus("C:/Users/Mar/Desktop/NxP_3/NUCtr.nex")
CPtr <- ape::read.nexus("C:/Users/Mar/Desktop/NxP_3/CPtr.nex")
np_matrix <- as.matrix(read.table("C:/Users/Mar/Desktop/NxP_3/NP.txt", header = TRUE))
save(NUCtr, CPtr, np_matrix, NUC_1000tr, CP_1000tr, file = "~/R/library/RTaPas/data/nuc_cp.rda")
tools::checkRdaFiles("~/R/library/RTaPas/data")
tools::resaveRdaFiles("~/R/library/RTaPas/data", compress = "bzip2")
tools::resaveRdaFiles("~/R/library/RTaPas/data", compress = "bzip2")
tools::checkRdaFiles("~/R/library/RTaPas/data")
usethis::use_r("nuc_cp")
devtools::load_all()
devtools::document()
?nuc_cp
tools::add_datalist("~/R/library/RTaPas/data")
View(NUCtr)
View(NUCtr)
View(NUC_1000tr)
devtools::load_all()
devtools::document()
devtools::document()
?nuc_cp
devtools::load_all()
devtools::document()
?nuc_cp
load("~/R/library/Rtapas/data/amph_trem.rda")
#'
#' \describe{
#'    \item{\code{am_matrix}}{Associations between the 52 orchid
#'    taxa.
#'    A binary matrix with 52 rows (nuclear) and 52 columns (chloroplast).}
#'
#'    \item{\code{NUCtr}}{Phylogeny constructed by sequence data of nuclear
#'    loci of orchids (Perez-Escobar et al. 2021).
#'    An object of class \code{"phylo"} containing a list with the details of
#'    the phylogenetic tree (i.e. edge, edge length, nodes and tips names).}
#'
#'    \item{\code{CPtr}}{Phylogeny constructed by sequence data of chloroplast
#'    loci of orchids (Perez-Escobar et al. 2021).
#'    An object of class \code{"phylo"} containing a list with the details of
#'    the phylogenetic tree (i.e. edge, edge length, nodes and tips names).}
#'
#'    \item{\code{NUC_1000tr}}{500 bootstrap replicates ultrametric trees
#'    from Perez-Escobar et al. (2021).
#'    List of class \code{"multiphylo"} containing a 500 phylogenetic trees
#'    with their respective details (i.e. edges, edges length, nodes, and
#'    tips names).}
#'
#'    \item{\code{CP_1000tr}}{500 bootstrap replicates ultrametric trees
#'    from Perez-Escobar et al. (2021).
#'    List of class \code{"multiphylo"} containing a 500 phylogenetic trees
#'    with their respective details (i.e. edges, edges length, nodes, and
#'    tips names).}
#'  }
View(amphipod)
NUC_500tr <- ape::read.tree("C:/Users/Mar/Desktop/NxP_3/FcC_212gNUC.trees")
CP_500tr <- ape::read.tree("C:/Users/Mar/Desktop/NxP_3/FcC_121sppCP.trees")
NUCtr <- ape::read.nexus("C:/Users/Mar/Desktop/NxP_3/NUCtr.nex")
CPtr <- ape::read.nexus("C:/Users/Mar/Desktop/NxP_3/CPtr.nex")
np_matrix <- as.matrix(read.table("C:/Users/Mar/Desktop/NxP_3/NP.txt", header = TRUE))
save(NUCtr, CPtr, np_matrix, NUC_1000tr, CP_1000tr, file = "~/R/library/RTaPas/data/nuc_cp.rda")
tools::checkRdaFiles("~/R/library/RTaPas/data")
tools::resaveRdaFiles("~/R/library/RTaPas/data", compress = "bzip2")
devtools::load_all()
devtools::document()
?nuc_cp
load("~/R/library/Rtapas/data/nuc_cp.rda")
NUC_500tr <- ape::read.tree("C:/Users/Mar/Desktop/NxP_3/FcC_212gNUC.trees")
CP_500tr <- ape::read.tree("C:/Users/Mar/Desktop/NxP_3/FcC_121sppCP.trees")
NUCtr <- ape::read.nexus("C:/Users/Mar/Desktop/NxP_3/NUCtr.nex")
CPtr <- ape::read.nexus("C:/Users/Mar/Desktop/NxP_3/CPtr.nex")
np_matrix <- as.matrix(read.table("C:/Users/Mar/Desktop/NxP_3/NP.txt", header = TRUE))
save(NUCtr, CPtr, np_matrix, NUC_500tr, CP_500tr, file = "~/R/library/RTaPas/data/nuc_cp.rda")
tools::checkRdaFiles("~/R/library/RTaPas/data")
tools::resaveRdaFiles("~/R/library/RTaPas/data", compress = "bzip2")
load("~/R/library/Rtapas/data/nuc_cp.rda")
load("~/R/library/Rtapas/data/amph_trem.rda")
usethis::use_r("assoc_mat")
data(nuc_cp)
usethis::use_r("one2one_f")
load("~/R/library/Rtapas/data/amph_trem.rda")
usethis::use_r("trimHS_maxC")
usethis::use_r("trimHS_maxI")
usethis::use_r("max_cong")
usethis::use_r("max_incong")
usethis::use_r("geo_D")
usethis::use_r("trimHS_maxC")
usethis::use_r("paco_ss")
usethis::use_r("paraF")
usethis::use_r("one2one_f")
usethis::use_r("tangle_gram")
usethis::use_r("paraF")
usethis::use_r("paco_ss")
usethis::use_r("link_freq")
usethis::use_r("max_cong")
usethis::use_r("tangle_gram")
usethis::use_r("prob_statistic")
usethis::use_r("max_incong")
usethis::use_r("linkf_CI")
usethis::use_r("gini_plot")
parafit
usethis::use_r("tangle_gram")
usethis::use_r("gini_plot")
usethis::use_r("gini_plot")
usethis::use_r("linkf_CI")
?prob_statistic
usethis::use_r("prob_statistic")
devtools::load_all()
data(nuc_cp)
N = 10
n = 8
# Maximizing congruence
NPc <- max_cong(np_matrix, NUCtr, CPtr, n, N, method = "paco",
symmetric = FALSE, ei.correct = "sqrt.D",
percentile = 0.01, res.fq = FALSE,
strat = "parallel", cl = 14)
THSc <- trimHS_maxC(N, np_matrix, n)
PACOc_ppt <- prob_statistic(ths = THSc, np_matrix, NUC_500tr[1:10],
CP_500tr[1:10], freqfun = "paco", NPc,
symmetric = FALSE, ei.correct = "sqrt.D",
percentile = 0.01, res.fq = FALSE,
below.p = TRUE, strat = "parallel", cl = 8)
# Maximizing incongruence
NPi <- max_incong(np_matrix, NUCtr, CPtr, n, N, method = "paco",
symmetric = FALSE, ei.correct = "sqrt.D",
percentile = 0.99, diff.fq = TRUE,
strat = "parallel", cl = 8)
THSi <- trimHS_maxI(N, np_matrix, n)
PACOi_ppt <- prob_statistic(ths = THSi, np_matrix, NUC_500tr[1:10],
CP_500tr[1:10], freqfun = "paco", NPi,
symmetric = FALSE, ei.correct = "sqrt.D",
percentile = 0.99, diff.fq = TRUE, res.fq = FALSE,
below.p = FALSE, strat = "parallel", cl = 8)
# Maximizing incongruence
NPi <- max_incong(np_matrix, NUCtr, CPtr, n, N, method = "paco",
symmetric = FALSE, ei.correct = "sqrt.D",
percentile = 0.99, diff.fq = TRUE,
strat = "parallel", cl = 8)
usethis::use_r("max_incong")
sum(np_matrix)
ncol(np_matrix)
devtools::load_all()
devtools::document()
# Maximizing incongruence
NPi <- max_incong(np_matrix, NUCtr, CPtr, n, N, method = "paco",
symmetric = FALSE, ei.correct = "sqrt.D",
percentile = 0.99, diff.fq = TRUE,
strat = "parallel", cl = 8)
THSi <- trimHS_maxI(N, np_matrix, n)
PACOi_ppt <- prob_statistic(ths = THSi, np_matrix, NUC_500tr[1:10],
CP_500tr[1:10], freqfun = "paco", NPi,
symmetric = FALSE, ei.correct = "sqrt.D",
percentile = 0.99, diff.fq = TRUE, res.fq = FALSE,
below.p = FALSE, strat = "parallel", cl = 8)
