% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gini_plot.R
\name{gini_plot}
\alias{gini_plot}
\title{Plot the confidence intervals of Gini coefficient}
\usage{
gini_plot(
  LF_1,
  M01,
  LF_2,
  M02,
  LF_3,
  M03,
  ylab = "Normalized Gini coefficient",
  ...
)
}
\arguments{
\item{LF_1}{Vector of statistics produced with
\code{\link[=max_cong]{max_cong()}} or
\code{\link[=max_incong]{max_incong()}} for \code{"geoD"},
\code{"paco"} or \code{"paraF"}.}

\item{M01}{Matrix produced with
\code{\link[=prob_statistic]{prob_statistic()}} for \code{"geoD"},
\code{"paco"} or \code{"paraF"} using \code{LF_1}.}

\item{LF_2}{Vector of statistics produced with
\code{\link[=max_cong]{max_cong()}} or
\code{\link[=max_incong]{max_incong()}} for \code{"geoD"},
\code{"paco"} or \code{"paraF"}.}

\item{M02}{Matrix produced with
\code{\link[=prob_statistic]{prob_statistic()}} for \code{"geoD"},
\code{"paco"} or \code{"paraF"} using \code{LF_2}.}

\item{LF_3}{Vector of statistics produced with
\code{\link[=max_cong]{max_cong()}} or
\code{\link[=max_incong]{max_incong()}} for \code{"geoD"},
\code{"paco"} or \code{"paraF"}.}

\item{M03}{Matrix produced with
\code{\link[=prob_statistic]{prob_statistic()}} for \code{"geoD"},
\code{"paco"} or \code{"paraF"} using \code{LF_3}.}

\item{...}{Any optional argument admissible in
\code{\link[graphics:boxplot]{boxplot()}}}
}
\value{
The Gini values obtained and their representation in a boxplot.
}
\description{
Computes and plot the normalized Gini coefficient (G*) (Raffinetti et al.
2015) and its confidence intervals of the residual frequency distributions
of the  desired statistics: \code{"geoD"} (Geodesic Distances),
\code{"paco"} (PACo) or \code{"paraF"} (M03)
(either all or only one of them).
}
\examples{
data(nuc_cp)
N = 10
n = 8
# Maximizing incongruence
NPi <- max_incong(np_matrix, NUCtr, CPtr, n, N, method = "paco",
                  symmetric = FALSE, ei.correct = "sqrt.D",
                  percentile = 0.99, diff.fq = TRUE,
                  strat = "parallel", cl = 8)
THSi <- trimHS_maxI(N, np_matrix, n)
PACOc <- prob_statistic(ths = THSi, np_matrix, NUC_500tr[1:5],
                        CP_500tr[1:5], freqfun = "paco", NPi,
                        symmetric = FALSE, ei.correct = "sqrt.D",
                        percentile = 0.99, diff.fq = TRUE, res.fq = FALSE,
                        below.p = TRUE, strat = "parallel", cl = 8)
}
